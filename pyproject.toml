[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "memory-mcp-server"
version = "0.1.0"
description = "A lightweight memory MCP server with persistent storage and RAG capabilities"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Memory MCP Server Team"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.13"
dependencies = [
    # Core MCP and async support
    "fastmcp>=0.1.0",
    "anyio>=3.6.0",
    # Data validation and serialization
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    # Database and ORM
    "sqlalchemy>=2.0.0",
    "alembic>=1.8.0",
    "aiosqlite>=0.19.0",
    # HTTP server and web framework
    "fastapi>=0.100.0",
    "uvicorn[standard]>=0.20.0",
    "jinja2>=3.1.0",
    # RAG and embeddings
    "sentence-transformers>=2.2.0",
    "numpy>=1.21.0",
    "scikit-learn>=1.0.0",
    # Utilities
    "python-multipart>=0.0.6",
    "aiofiles>=23.0.0",
    "click>=8.0.0",
    "pyyaml>=6.0",
    "python-dotenv>=1.0.0",
    "greenlet>=3.2.3",
    "mypy>=1.17.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "httpx>=0.24.0",
    "aiosqlite>=0.19.0",
]

[project.scripts]
memory-mcp-server = "memory_mcp_server.cli:main"
memory-mcp-stdio = "memory_mcp_server.cli:stdio_main"
memory-mcp-http = "memory_mcp_server.cli:http_main"
memory-mcp-web = "memory_mcp_server.cli:web_main"
memory-mcp-combined = "memory_mcp_server.cli:combined_main"

[project.urls]
Homepage = "https://github.com/memory-mcp-server/memory-mcp-server"
Repository = "https://github.com/memory-mcp-server/memory-mcp-server"
Issues = "https://github.com/memory-mcp-server/memory-mcp-server/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["memory_mcp_server*"]

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["memory_mcp_server"]

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["memory_mcp_server"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
]
